fileTypes: [
  "thy"
]
name: "Isabelle Theory"
patterns: [
  {
    begin: "\\{\\*"
    end: "\\*\\}"
    name: "comment.block.documentation"
  }
  {
    begin: "\\\\\\<open\\>"
    end: "\\\\\\<close\\>"
    name: "comment.block.documentation"
  }
  {
    begin: "\\(\\*"
    end: "\\*\\)"
    name: "comment.block"
  }
  {
    match: "--([ ]*\"[^\"]+\")?"
    name: "comment.line"
  }
  {
    captures:
      "1":
        name: "keyword.other.isabelle.theory"
      "2":
        name: "storage"
    match: "\\b(theory)[ ]+([a-zA-Z0-9_]+)"
  }
  {
    match: "\\b(header|chapter|section|subsection|subsubsection|sect|subsect|subsubsect|paragraph|subparagraph)\\b"
    name: "markup.heading"
  }
  {
    match: "\\b(abbrevs|and|assumes|attach|avoids|binder|checking|class_instance|class_relation|code_module|congs|constant|constrains|datatypes|defines|file|fixes|for|functions|hints|identifier|if|imports|in|includes|infix|infixl|infixr|is|keywords|lazy|module_name|monos|morphisms|no_discs_sels|notes|obtains|open|output|overloaded|parametric|permissive|pervasive|private|qualified|rep_compat|rewrites|shows|structure|type_class|type_constructor|unchecked|unsafe|when|where|begin|end)\\b"
    name: "keyword.other.minor"
  }
  {
    match: '''
      \\b(ML_command|ML_val|class_deps|code_deps|code_thms|display_drafts|find_consts|find_theorems|find_unused_assms|full_prf|help|locale_deps|nitpick|pr|prf|print_abbrevs|print_antiquotations|print_attributes|print_binds|print_bnfs|print_bundles|print_case_translations|print_cases|print_claset|print_classes|print_codeproc|print_codesetup|print_coercions|print_commands|print_context|print_definitions|print_defn_rules|print_dependencies|print_facts|print_induct_rules|print_inductives|print_interps|print_locale|print_locales|print_methods|print_options|print_orders|print_quot_maps|print_quotconsts|print_quotients|print_quotientsQ3|print_quotmapsQ3|print_rules|print_simpset|print_state|print_statement|print_syntax|print_theorems|print_theory|print_trans_rules|prop|pwd|quickcheck|refute|sledgehammer|smt_status|solve_direct|spark_status|term|thm|thm_deps|thy_deps|try|try0|typ|unused_thms|value|values|welcome|print_ML_antiquotations|print_term_bindings|print_record|values_prolog|nunchaku
              )\\b
    '''
    name: "keyword.other.diagnostic"
  }
  {
    match: "\\b(ML|ML_file|ML_file_debug|ML_file_no_debug|abbreviation|alias|adhoc_overloading|arities|atom_decl|attribute_setup|axiomatization|bundle|unbundle|case_of_simps|class|classes|classrel|codatatype|code_abort|code_class|code_const|code_datatype|code_identifier|code_include|code_instance|code_modulename|code_monad|code_printing|code_reflect|code_reserved|code_type|coinductive|coinductive_set|consts|context|datatype|datatype_new|datatype_new_compat|declaration|declare|default_sort|defer_recdef|definition|defs|domain|domain_isomorphism|domaindef|equivariance|experiment|export_code|extract|extract_type|fixrec|fun|fun_cases|hide_class|hide_const|hide_fact|hide_type|import_const_map|import_file|import_tptp|import_type_map|inductive|inductive_set|instantiation|judgment|lifting_forget|lifting_update|local_setup|locale|method_setup|nitpick_params|nunchaku_params|no_adhoc_overloading|no_notation|no_syntax|no_translations|no_type_notation|nominal_datatype|nonterminal|notation|notepad|oracle|overloading|parse_ast_translation|parse_translation|partial_function|primcorec|primrec|primrec_new|print_ast_translation|print_translation|quickcheck_generator|quickcheck_params|realizability|realizers|recdef|record|refute_params|setup|setup_lifting|simproc_setup|simps_of_case|sledgehammer_params|spark_end|spark_open|spark_open_siv|spark_open_vcg|spark_proof_functions|spark_types|statespace|syntax|syntax_declaration|text|text_raw|txt|txt_raw|theorems|translations|type_alias|type_notation|type_synonym|typed_print_translation|typedecl|hoarestate|install_C_file|install_C_types|wpc_setup|c_defs|c_types|memsafe|SML_export|SML_file|SML_file_debug|SML_file_no_debug|SML_import|approximate|bnf_axiomatization|cartouche|datatype_compat|free_constructors|functor|nominal_function|nominal_termination|permanent_interpretation|binds|defining|smt2_status|term_cartouche|boogie_file|text_cartouche|autocorres|sep_instance)\\b"
    name: "keyword.other.declaration"
  }
  {
    match: "\\b(inductive_cases|inductive_simps|crunch)\\b"
    name: "keyword.other.script"
  }
  {
    match: "\\b(ax_specification|bnf|copy_bnf|lift_bnf|code_pred|corollary|cpodef|crunch_ignore|enriched_type|function|instance|interpretation|global_interpretation|lift_definition|nominal_inductive|nominal_inductive2|nominal_primrec|pcpodef|primcorecursive|quotient_definition|quotient_type|recdef_tc|rep_datatype|old_rep_datatype|spark_vc|specification|subclass|sublocale|termination|theorem|typedef|wrap_free_constructors)\\b"
    name: "keyword.other.goal"
  }
  {
    match: "\\b(have|hence|interpret|next|proof|finally|from|then|ultimately|with|ML_prf|also|include|including|let|moreover|note|unfolding|using|write|also|include|including|let|moreover|note|txt|txt_raw|unfolding|using|supply|write|assume|case|def|fix|presume|consider|guess|obtain|show|subgoal|thus|apply|apply_end|apply_trace|back|defer|prefer|and|by|done|qed)\\b"
    name: "keyword.control.proof"
  }
  {
    match: "\\b(lemma|schematic_lemma|theorem|schematic_theorem|corollary|schematic_corollary|lemmas|schematic_goal|proposition|named_theorems|method)\\b"
    name: "support.constant"
  }
  {
    match: "\\b(sorry|oops)\\b"
    name: "invalid.illegal.abandon-proof"
  }
  {
    begin: "''"
    end: "''"
    name: "string"
  }
  {
    match: "::|:|\\(|\\)|\\[|\\]|_|\\=|\\,|\\+|\\-|\\!|\\?|\\|"
    name: "keyword.operator"
  }
  {
    match: "\\.\\.|\\{|\\}|\\."
    name: "keyword.operator.proof"
  }
  {
    match: ";"
    name: "punctuation.terminator.isabelle"
  }
  {
    match: "[0-9]+"
    name: "constant.numeric"
  }

# Symbols
  {
    match: "\\\\<zero>"
    name: "zero.symbol"
  }
  {
    match: "\\\\<one>"
    name: "one.symbol"
  }
  {
    match: "\\\\<two>"
    name: "two.symbol"
  }
  {
    match: "\\\\<three>"
    name: "three.symbol"
  }
  {
    match: "\\\\<four>"
    name: "four.symbol"
  }
  {
    match: "\\\\<five>"
    name: "five.symbol"
  }
  {
    match: "\\\\<six>"
    name: "six.symbol"
  }
  {
    match: "\\\\<seven>"
    name: "seven.symbol"
  }
  {
    match: "\\\\<eight>"
    name: "eight.symbol"
  }
  {
    match: "\\\\<nine>"
    name: "nine.symbol"
  }
  {
    match: "\\\\<A>"
    name: "A.symbol"
  }
  {
    match: "\\\\<B>"
    name: "B.symbol"
  }
  {
    match: "\\\\<C>"
    name: "C.symbol"
  }
  {
    match: "\\\\<D>"
    name: "D.symbol"
  }
  {
    match: "\\\\<E>"
    name: "E.symbol"
  }
  {
    match: "\\\\<F>"
    name: "F.symbol"
  }
  {
    match: "\\\\<G>"
    name: "G.symbol"
  }
  {
    match: "\\\\<H>"
    name: "H.symbol"
  }
  {
    match: "\\\\<I>"
    name: "I.symbol"
  }
  {
    match: "\\\\<J>"
    name: "J.symbol"
  }
  {
    match: "\\\\<K>"
    name: "K.symbol"
  }
  {
    match: "\\\\<L>"
    name: "L.symbol"
  }
  {
    match: "\\\\<M>"
    name: "M.symbol"
  }
  {
    match: "\\\\<N>"
    name: "N.symbol"
  }
  {
    match: "\\\\<O>"
    name: "O.symbol"
  }
  {
    match: "\\\\<P>"
    name: "P.symbol"
  }
  {
    match: "\\\\<Q>"
    name: "Q.symbol"
  }
  {
    match: "\\\\<R>"
    name: "R.symbol"
  }
  {
    match: "\\\\<S>"
    name: "S.symbol"
  }
  {
    match: "\\\\<T>"
    name: "T.symbol"
  }
  {
    match: "\\\\<U>"
    name: "U.symbol"
  }
  {
    match: "\\\\<V>"
    name: "V.symbol"
  }
  {
    match: "\\\\<W>"
    name: "W.symbol"
  }
  {
    match: "\\\\<X>"
    name: "X.symbol"
  }
  {
    match: "\\\\<Y>"
    name: "Y.symbol"
  }
  {
    match: "\\\\<Z>"
    name: "Z.symbol"
  }
  {
    match: "\\\\<a>"
    name: "a.symbol"
  }
  {
    match: "\\\\<b>"
    name: "b.symbol"
  }
  {
    match: "\\\\<c>"
    name: "c.symbol"
  }
  {
    match: "\\\\<d>"
    name: "d.symbol"
  }
  {
    match: "\\\\<e>"
    name: "e.symbol"
  }
  {
    match: "\\\\<f>"
    name: "f.symbol"
  }
  {
    match: "\\\\<g>"
    name: "g.symbol"
  }
  {
    match: "\\\\<h>"
    name: "h.symbol"
  }
  {
    match: "\\\\<i>"
    name: "i.symbol"
  }
  {
    match: "\\\\<j>"
    name: "j.symbol"
  }
  {
    match: "\\\\<k>"
    name: "k.symbol"
  }
  {
    match: "\\\\<l>"
    name: "l.symbol"
  }
  {
    match: "\\\\<m>"
    name: "m.symbol"
  }
  {
    match: "\\\\<n>"
    name: "n.symbol"
  }
  {
    match: "\\\\<o>"
    name: "o.symbol"
  }
  {
    match: "\\\\<p>"
    name: "p.symbol"
  }
  {
    match: "\\\\<q>"
    name: "q.symbol"
  }
  {
    match: "\\\\<r>"
    name: "r.symbol"
  }
  {
    match: "\\\\<s>"
    name: "s.symbol"
  }
  {
    match: "\\\\<t>"
    name: "t.symbol"
  }
  {
    match: "\\\\<u>"
    name: "u.symbol"
  }
  {
    match: "\\\\<v>"
    name: "v.symbol"
  }
  {
    match: "\\\\<w>"
    name: "w.symbol"
  }
  {
    match: "\\\\<x>"
    name: "x.symbol"
  }
  {
    match: "\\\\<y>"
    name: "y.symbol"
  }
  {
    match: "\\\\<z>"
    name: "z.symbol"
  }
  {
    match: "\\\\<AA>"
    name: "AA.symbol"
  }
  {
    match: "\\\\<BB>"
    name: "BB.symbol"
  }
  {
    match: "\\\\<CC>"
    name: "CC.symbol"
  }
  {
    match: "\\\\<DD>"
    name: "DD.symbol"
  }
  {
    match: "\\\\<EE>"
    name: "EE.symbol"
  }
  {
    match: "\\\\<FF>"
    name: "FF.symbol"
  }
  {
    match: "\\\\<GG>"
    name: "GG.symbol"
  }
  {
    match: "\\\\<HH>"
    name: "HH.symbol"
  }
  {
    match: "\\\\<II>"
    name: "II.symbol"
  }
  {
    match: "\\\\<JJ>"
    name: "JJ.symbol"
  }
  {
    match: "\\\\<KK>"
    name: "KK.symbol"
  }
  {
    match: "\\\\<LL>"
    name: "LL.symbol"
  }
  {
    match: "\\\\<MM>"
    name: "MM.symbol"
  }
  {
    match: "\\\\<NN>"
    name: "NN.symbol"
  }
  {
    match: "\\\\<OO>"
    name: "OO.symbol"
  }
  {
    match: "\\\\<PP>"
    name: "PP.symbol"
  }
  {
    match: "\\\\<QQ>"
    name: "QQ.symbol"
  }
  {
    match: "\\\\<RR>"
    name: "RR.symbol"
  }
  {
    match: "\\\\<SS>"
    name: "SS.symbol"
  }
  {
    match: "\\\\<TT>"
    name: "TT.symbol"
  }
  {
    match: "\\\\<UU>"
    name: "UU.symbol"
  }
  {
    match: "\\\\<VV>"
    name: "VV.symbol"
  }
  {
    match: "\\\\<WW>"
    name: "WW.symbol"
  }
  {
    match: "\\\\<XX>"
    name: "XX.symbol"
  }
  {
    match: "\\\\<YY>"
    name: "YY.symbol"
  }
  {
    match: "\\\\<ZZ>"
    name: "ZZ.symbol"
  }
  {
    match: "\\\\<aa>"
    name: "aa.symbol"
  }
  {
    match: "\\\\<bb>"
    name: "bb.symbol"
  }
  {
    match: "\\\\<cc>"
    name: "cc.symbol"
  }
  {
    match: "\\\\<dd>"
    name: "dd.symbol"
  }
  {
    match: "\\\\<ee>"
    name: "ee.symbol"
  }
  {
    match: "\\\\<ff>"
    name: "ff.symbol"
  }
  {
    match: "\\\\<gg>"
    name: "gg.symbol"
  }
  {
    match: "\\\\<hh>"
    name: "hh.symbol"
  }
  {
    match: "\\\\<ii>"
    name: "ii.symbol"
  }
  {
    match: "\\\\<jj>"
    name: "jj.symbol"
  }
  {
    match: "\\\\<kk>"
    name: "kk.symbol"
  }
  {
    match: "\\\\<ll>"
    name: "ll.symbol"
  }
  {
    match: "\\\\<mm>"
    name: "mm.symbol"
  }
  {
    match: "\\\\<nn>"
    name: "nn.symbol"
  }
  {
    match: "\\\\<oo>"
    name: "oo.symbol"
  }
  {
    match: "\\\\<pp>"
    name: "pp.symbol"
  }
  {
    match: "\\\\<qq>"
    name: "qq.symbol"
  }
  {
    match: "\\\\<rr>"
    name: "rr.symbol"
  }
  {
    match: "\\\\<ss>"
    name: "ss.symbol"
  }
  {
    match: "\\\\<tt>"
    name: "tt.symbol"
  }
  {
    match: "\\\\<uu>"
    name: "uu.symbol"
  }
  {
    match: "\\\\<vv>"
    name: "vv.symbol"
  }
  {
    match: "\\\\<ww>"
    name: "ww.symbol"
  }
  {
    match: "\\\\<xx>"
    name: "xx.symbol"
  }
  {
    match: "\\\\<yy>"
    name: "yy.symbol"
  }
  {
    match: "\\\\<zz>"
    name: "zz.symbol"
  }
  {
    match: "\\\\<alpha>"
    name: "alpha.symbol"
  }
  {
    match: "\\\\<beta>"
    name: "beta.symbol"
  }
  {
    match: "\\\\<gamma>"
    name: "gamma.symbol"
  }
  {
    match: "\\\\<delta>"
    name: "delta.symbol"
  }
  {
    match: "\\\\<epsilon>"
    name: "epsilon.symbol"
  }
  {
    match: "\\\\<zeta>"
    name: "zeta.symbol"
  }
  {
    match: "\\\\<eta>"
    name: "eta.symbol"
  }
  {
    match: "\\\\<theta>"
    name: "theta.symbol"
  }
  {
    match: "\\\\<iota>"
    name: "iota.symbol"
  }
  {
    match: "\\\\<kappa>"
    name: "kappa.symbol"
  }
  {
    match: "\\\\<lambda>"
    name: "lambda.symbol"
  }
  {
    match: "\\\\<mu>"
    name: "mu.symbol"
  }
  {
    match: "\\\\<nu>"
    name: "nu.symbol"
  }
  {
    match: "\\\\<xi>"
    name: "xi.symbol"
  }
  {
    match: "\\\\<pi>"
    name: "pi.symbol"
  }
  {
    match: "\\\\<rho>"
    name: "rho.symbol"
  }
  {
    match: "\\\\<sigma>"
    name: "sigma.symbol"
  }
  {
    match: "\\\\<tau>"
    name: "tau.symbol"
  }
  {
    match: "\\\\<upsilon>"
    name: "upsilon.symbol"
  }
  {
    match: "\\\\<phi>"
    name: "phi.symbol"
  }
  {
    match: "\\\\<chi>"
    name: "chi.symbol"
  }
  {
    match: "\\\\<psi>"
    name: "psi.symbol"
  }
  {
    match: "\\\\<omega>"
    name: "omega.symbol"
  }
  {
    match: "\\\\<Gamma>"
    name: "Gamma.symbol"
  }
  {
    match: "\\\\<Delta>"
    name: "Delta.symbol"
  }
  {
    match: "\\\\<Theta>"
    name: "Theta.symbol"
  }
  {
    match: "\\\\<Lambda>"
    name: "Lambda.symbol"
  }
  {
    match: "\\\\<Xi>"
    name: "Xi.symbol"
  }
  {
    match: "\\\\<Pi>"
    name: "Pi.symbol"
  }
  {
    match: "\\\\<Sigma>"
    name: "Sigma.symbol"
  }
  {
    match: "\\\\<Upsilon>"
    name: "Upsilon.symbol"
  }
  {
    match: "\\\\<Phi>"
    name: "Phi.symbol"
  }
  {
    match: "\\\\<Psi>"
    name: "Psi.symbol"
  }
  {
    match: "\\\\<Omega>"
    name: "Omega.symbol"
  }
  {
    match: "\\\\<bool>"
    name: "bool.symbol"
  }
  {
    match: "\\\\<complex>"
    name: "complex.symbol"
  }
  {
    match: "\\\\<nat>"
    name: "nat.symbol"
  }
  {
    match: "\\\\<rat>"
    name: "rat.symbol"
  }
  {
    match: "\\\\<real>"
    name: "real.symbol"
  }
  {
    match: "\\\\<int>"
    name: "int.symbol"
  }
  {
    match: "\\\\<leftarrow>"
    name: "leftarrow.symbol"
  }
  {
    match: "\\\\<longleftarrow>"
    name: "longleftarrow.symbol"
  }
  {
    match: "\\\\<longlongleftarrow>"
    name: "longlongleftarrow.symbol"
  }
  {
    match: "\\\\<longlonglongleftarrow>"
    name: "longlonglongleftarrow.symbol"
  }
  {
    match: "\\\\<rightarrow>"
    name: "rightarrow.symbol"
  }
  {
    match: "\\\\<longrightarrow>"
    name: "longrightarrow.symbol"
  }
  {
    match: "\\\\<longlongrightarrow>"
    name: "longlongrightarrow.symbol"
  }
  {
    match: "\\\\<longlonglongrightarrow>"
    name: "longlonglongrightarrow.symbol"
  }
  {
    match: "\\\\<Leftarrow>"
    name: "Leftarrow.symbol"
  }
  {
    match: "\\\\<Longleftarrow>"
    name: "Longleftarrow.symbol"
  }
  {
    match: "\\\\<Lleftarrow>"
    name: "Lleftarrow.symbol"
  }
  {
    match: "\\\\<Rightarrow>"
    name: "Rightarrow.symbol"
  }
  {
    match: "\\\\<Longrightarrow>"
    name: "Longrightarrow.symbol"
  }
  {
    match: "\\\\<Rrightarrow>"
    name: "Rrightarrow.symbol"
  }
  {
    match: "\\\\<leftrightarrow>"
    name: "leftrightarrow.symbol"
  }
  {
    match: "\\\\<longleftrightarrow>"
    name: "longleftrightarrow.symbol"
  }
  {
    match: "\\\\<Leftrightarrow>"
    name: "Leftrightarrow.symbol"
  }
  {
    match: "\\\\<Longleftrightarrow>"
    name: "Longleftrightarrow.symbol"
  }
  {
    match: "\\\\<mapsto>"
    name: "mapsto.symbol"
  }
  {
    match: "\\\\<longmapsto>"
    name: "longmapsto.symbol"
  }
  {
    match: "\\\\<midarrow>"
    name: "midarrow.symbol"
  }
  {
    match: "\\\\<Midarrow>"
    name: "Midarrow.symbol"
  }
  {
    match: "\\\\<hookleftarrow>"
    name: "hookleftarrow.symbol"
  }
  {
    match: "\\\\<hookrightarrow>"
    name: "hookrightarrow.symbol"
  }
  {
    match: "\\\\<leftharpoondown>"
    name: "leftharpoondown.symbol"
  }
  {
    match: "\\\\<rightharpoondown>"
    name: "rightharpoondown.symbol"
  }
  {
    match: "\\\\<leftharpoonup>"
    name: "leftharpoonup.symbol"
  }
  {
    match: "\\\\<rightharpoonup>"
    name: "rightharpoonup.symbol"
  }
  {
    match: "\\\\<rightleftharpoons>"
    name: "rightleftharpoons.symbol"
  }
  {
    match: "\\\\<leadsto>"
    name: "leadsto.symbol"
  }
  {
    match: "\\\\<downharpoonleft>"
    name: "downharpoonleft.symbol"
  }
  {
    match: "\\\\<downharpoonright>"
    name: "downharpoonright.symbol"
  }
  {
    match: "\\\\<upharpoonleft>"
    name: "upharpoonleft.symbol"
  }
  {
    match: "\\\\<restriction>"
    name: "restriction.symbol"
  }
  {
    match: "\\\\<Colon>"
    name: "Colon.symbol"
  }
  {
    match: "\\\\<up>"
    name: "up.symbol"
  }
  {
    match: "\\\\<Up>"
    name: "Up.symbol"
  }
  {
    match: "\\\\<down>"
    name: "down.symbol"
  }
  {
    match: "\\\\<Down>"
    name: "Down.symbol"
  }
  {
    match: "\\\\<updown>"
    name: "updown.symbol"
  }
  {
    match: "\\\\<Updown>"
    name: "Updown.symbol"
  }
  {
    match: "\\\\<langle>"
    name: "langle.symbol"
  }
  {
    match: "\\\\<rangle>"
    name: "rangle.symbol"
  }
  {
    match: "\\\\<lceil>"
    name: "lceil.symbol"
  }
  {
    match: "\\\\<rceil>"
    name: "rceil.symbol"
  }
  {
    match: "\\\\<lfloor>"
    name: "lfloor.symbol"
  }
  {
    match: "\\\\<rfloor>"
    name: "rfloor.symbol"
  }
  {
    match: "\\\\<lparr>"
    name: "lparr.symbol"
  }
  {
    match: "\\\\<rparr>"
    name: "rparr.symbol"
  }
  {
    match: "\\\\<lbrakk>"
    name: "lbrakk.symbol"
  }
  {
    match: "\\\\<rbrakk>"
    name: "rbrakk.symbol"
  }
  {
    match: "\\\\<lbrace>"
    name: "lbrace.symbol"
  }
  {
    match: "\\\\<rbrace>"
    name: "rbrace.symbol"
  }
  {
    match: "\\\\<guillemotleft>"
    name: "guillemotleft.symbol"
  }
  {
    match: "\\\\<guillemotright>"
    name: "guillemotright.symbol"
  }
  {
    match: "\\\\<bottom>"
    name: "bottom.symbol"
  }
  {
    match: "\\\\<top>"
    name: "top.symbol"
  }
  {
    match: "\\\\<and>"
    name: "and.symbol"
  }
  {
    match: "\\\\<And>"
    name: "And.symbol"
  }
  {
    match: "\\\\<or>"
    name: "or.symbol"
  }
  {
    match: "\\\\<Or>"
    name: "Or.symbol"
  }
  {
    match: "\\\\<forall>"
    name: "forall.symbol"
  }
  {
    match: "\\\\<exists>"
    name: "exists.symbol"
  }
  {
    match: "\\\\<nexists>"
    name: "nexists.symbol"
  }
  {
    match: "\\\\<not>"
    name: "not.symbol"
  }
  {
    match: "\\\\<circle>"
    name: "circle.symbol"
  }
  {
    match: "\\\\<box>"
    name: "box.symbol"
  }
  {
    match: "\\\\<diamond>"
    name: "diamond.symbol"
  }
  {
    match: "\\\\<diamondop>"
    name: "diamondop.symbol"
  }
  {
    match: "\\\\<turnstile>"
    name: "turnstile.symbol"
  }
  {
    match: "\\\\<Turnstile>"
    name: "Turnstile.symbol"
  }
  {
    match: "\\\\<tturnstile>"
    name: "tturnstile.symbol"
  }
  {
    match: "\\\\<TTurnstile>"
    name: "TTurnstile.symbol"
  }
  {
    match: "\\\\<stileturn>"
    name: "stileturn.symbol"
  }
  {
    match: "\\\\<surd>"
    name: "surd.symbol"
  }
  {
    match: "\\\\<le>"
    name: "le.symbol"
  }
  {
    match: "\\\\<ge>"
    name: "ge.symbol"
  }
  {
    match: "\\\\<lless>"
    name: "lless.symbol"
  }
  {
    match: "\\\\<ggreater>"
    name: "ggreater.symbol"
  }
  {
    match: "\\\\<lesssim>"
    name: "lesssim.symbol"
  }
  {
    match: "\\\\<greatersim>"
    name: "greatersim.symbol"
  }
  {
    match: "\\\\<lessapprox>"
    name: "lessapprox.symbol"
  }
  {
    match: "\\\\<greaterapprox>"
    name: "greaterapprox.symbol"
  }
  {
    match: "\\\\<in>"
    name: "in.symbol"
  }
  {
    match: "\\\\<notin>"
    name: "notin.symbol"
  }
  {
    match: "\\\\<subset>"
    name: "subset.symbol"
  }
  {
    match: "\\\\<supset>"
    name: "supset.symbol"
  }
  {
    match: "\\\\<subseteq>"
    name: "subseteq.symbol"
  }
  {
    match: "\\\\<supseteq>"
    name: "supseteq.symbol"
  }
  {
    match: "\\\\<sqsubset>"
    name: "sqsubset.symbol"
  }
  {
    match: "\\\\<sqsupset>"
    name: "sqsupset.symbol"
  }
  {
    match: "\\\\<sqsubseteq>"
    name: "sqsubseteq.symbol"
  }
  {
    match: "\\\\<sqsupseteq>"
    name: "sqsupseteq.symbol"
  }
  {
    match: "\\\\<inter>"
    name: "inter.symbol"
  }
  {
    match: "\\\\<Inter>"
    name: "Inter.symbol"
  }
  {
    match: "\\\\<union>"
    name: "union.symbol"
  }
  {
    match: "\\\\<Union>"
    name: "Union.symbol"
  }
  {
    match: "\\\\<squnion>"
    name: "squnion.symbol"
  }
  {
    match: "\\\\<Squnion>"
    name: "Squnion.symbol"
  }
  {
    match: "\\\\<sqinter>"
    name: "sqinter.symbol"
  }
  {
    match: "\\\\<Sqinter>"
    name: "Sqinter.symbol"
  }
  {
    match: "\\\\<setminus>"
    name: "setminus.symbol"
  }
  {
    match: "\\\\<propto>"
    name: "propto.symbol"
  }
  {
    match: "\\\\<uplus>"
    name: "uplus.symbol"
  }
  {
    match: "\\\\<Uplus>"
    name: "Uplus.symbol"
  }
  {
    match: "\\\\<noteq>"
    name: "noteq.symbol"
  }
  {
    match: "\\\\<sim>"
    name: "sim.symbol"
  }
  {
    match: "\\\\<doteq>"
    name: "doteq.symbol"
  }
  {
    match: "\\\\<simeq>"
    name: "simeq.symbol"
  }
  {
    match: "\\\\<approx>"
    name: "approx.symbol"
  }
  {
    match: "\\\\<asymp>"
    name: "asymp.symbol"
  }
  {
    match: "\\\\<cong>"
    name: "cong.symbol"
  }
  {
    match: "\\\\<smile>"
    name: "smile.symbol"
  }
  {
    match: "\\\\<equiv>"
    name: "equiv.symbol"
  }
  {
    match: "\\\\<frown>"
    name: "frown.symbol"
  }
  {
    match: "\\\\<Join>"
    name: "Join.symbol"
  }
  {
    match: "\\\\<bowtie>"
    name: "bowtie.symbol"
  }
  {
    match: "\\\\<prec>"
    name: "prec.symbol"
  }
  {
    match: "\\\\<succ>"
    name: "succ.symbol"
  }
  {
    match: "\\\\<preceq>"
    name: "preceq.symbol"
  }
  {
    match: "\\\\<succeq>"
    name: "succeq.symbol"
  }
  {
    match: "\\\\<parallel>"
    name: "parallel.symbol"
  }
  {
    match: "\\\\<bar>"
    name: "bar.symbol"
  }
  {
    match: "\\\\<plusminus>"
    name: "plusminus.symbol"
  }
  {
    match: "\\\\<minusplus>"
    name: "minusplus.symbol"
  }
  {
    match: "\\\\<times>"
    name: "times.symbol"
  }
  {
    match: "\\\\<div>"
    name: "div.symbol"
  }
  {
    match: "\\\\<cdot>"
    name: "cdot.symbol"
  }
  {
    match: "\\\\<star>"
    name: "star.symbol"
  }
  {
    match: "\\\\<bullet>"
    name: "bullet.symbol"
  }
  {
    match: "\\\\<circ>"
    name: "circ.symbol"
  }
  {
    match: "\\\\<dagger>"
    name: "dagger.symbol"
  }
  {
    match: "\\\\<ddagger>"
    name: "ddagger.symbol"
  }
  {
    match: "\\\\<lhd>"
    name: "lhd.symbol"
  }
  {
    match: "\\\\<rhd>"
    name: "rhd.symbol"
  }
  {
    match: "\\\\<unlhd>"
    name: "unlhd.symbol"
  }
  {
    match: "\\\\<unrhd>"
    name: "unrhd.symbol"
  }
  {
    match: "\\\\<triangleleft>"
    name: "triangleleft.symbol"
  }
  {
    match: "\\\\<triangleright>"
    name: "triangleright.symbol"
  }
  {
    match: "\\\\<triangle>"
    name: "triangle.symbol"
  }
  {
    match: "\\\\<triangleq>"
    name: "triangleq.symbol"
  }
  {
    match: "\\\\<oplus>"
    name: "oplus.symbol"
  }
  {
    match: "\\\\<Oplus>"
    name: "Oplus.symbol"
  }
  {
    match: "\\\\<otimes>"
    name: "otimes.symbol"
  }
  {
    match: "\\\\<Otimes>"
    name: "Otimes.symbol"
  }
  {
    match: "\\\\<odot>"
    name: "odot.symbol"
  }
  {
    match: "\\\\<Odot>"
    name: "Odot.symbol"
  }
  {
    match: "\\\\<ominus>"
    name: "ominus.symbol"
  }
  {
    match: "\\\\<oslash>"
    name: "oslash.symbol"
  }
  {
    match: "\\\\<dots>"
    name: "dots.symbol"
  }
  {
    match: "\\\\<cdots>"
    name: "cdots.symbol"
  }
  {
    match: "\\\\<Sum>"
    name: "Sum.symbol"
  }
  {
    match: "\\\\<Prod>"
    name: "Prod.symbol"
  }
  {
    match: "\\\\<Coprod>"
    name: "Coprod.symbol"
  }
  {
    match: "\\\\<infinity>"
    name: "infinity.symbol"
  }
  {
    match: "\\\\<integral>"
    name: "integral.symbol"
  }
  {
    match: "\\\\<ointegral>"
    name: "ointegral.symbol"
  }
  {
    match: "\\\\<clubsuit>"
    name: "clubsuit.symbol"
  }
  {
    match: "\\\\<diamondsuit>"
    name: "diamondsuit.symbol"
  }
  {
    match: "\\\\<heartsuit>"
    name: "heartsuit.symbol"
  }
  {
    match: "\\\\<spadesuit>"
    name: "spadesuit.symbol"
  }
  {
    match: "\\\\<aleph>"
    name: "aleph.symbol"
  }
  {
    match: "\\\\<emptyset>"
    name: "emptyset.symbol"
  }
  {
    match: "\\\\<nabla>"
    name: "nabla.symbol"
  }
  {
    match: "\\\\<partial>"
    name: "partial.symbol"
  }
  {
    match: "\\\\<flat>"
    name: "flat.symbol"
  }
  {
    match: "\\\\<natural>"
    name: "natural.symbol"
  }
  {
    match: "\\\\<sharp>"
    name: "sharp.symbol"
  }
  {
    match: "\\\\<angle>"
    name: "angle.symbol"
  }
  {
    match: "\\\\<copyright>"
    name: "copyright.symbol"
  }
  {
    match: "\\\\<registered>"
    name: "registered.symbol"
  }
  {
    match: "\\\\<hyphen>"
    name: "hyphen.symbol"
  }
  {
    match: "\\\\<inverse>"
    name: "inverse.symbol"
  }
  {
    match: "\\\\<onequarter>"
    name: "onequarter.symbol"
  }
  {
    match: "\\\\<onehalf>"
    name: "onehalf.symbol"
  }
  {
    match: "\\\\<threequarters>"
    name: "threequarters.symbol"
  }
  {
    match: "\\\\<ordfeminine>"
    name: "ordfeminine.symbol"
  }
  {
    match: "\\\\<ordmasculine>"
    name: "ordmasculine.symbol"
  }
  {
    match: "\\\\<section>"
    name: "section.symbol"
  }
  {
    match: "\\\\<paragraph>"
    name: "paragraph.symbol"
  }
  {
    match: "\\\\<exclamdown>"
    name: "exclamdown.symbol"
  }
  {
    match: "\\\\<questiondown>"
    name: "questiondown.symbol"
  }
  {
    match: "\\\\<euro>"
    name: "euro.symbol"
  }
  {
    match: "\\\\<pounds>"
    name: "pounds.symbol"
  }
  {
    match: "\\\\<yen>"
    name: "yen.symbol"
  }
  {
    match: "\\\\<cent>"
    name: "cent.symbol"
  }
  {
    match: "\\\\<currency>"
    name: "currency.symbol"
  }
  {
    match: "\\\\<degree>"
    name: "degree.symbol"
  }
  {
    match: "\\\\<amalg>"
    name: "amalg.symbol"
  }
  {
    match: "\\\\<mho>"
    name: "mho.symbol"
  }
  {
    match: "\\\\<lozenge>"
    name: "lozenge.symbol"
  }
  {
    match: "\\\\<wp>"
    name: "wp.symbol"
  }
  {
    match: "\\\\<wrong>"
    name: "wrong.symbol"
  }
  {
    match: "\\\\<acute>"
    name: "acute.symbol"
  }
  {
    match: "\\\\<index>"
    name: "index.symbol"
  }
  {
    match: "\\\\<dieresis>"
    name: "dieresis.symbol"
  }
  {
    match: "\\\\<cedilla>"
    name: "cedilla.symbol"
  }
  {
    match: "\\\\<hungarumlaut>"
    name: "hungarumlaut.symbol"
  }
  {
    match: "\\\\<bind>"
    name: "bind.symbol"
  }
  {
    match: "\\\\<then>"
    name: "then.symbol"
  }
  {
    match: "\\\\<some>"
    name: "some.symbol"
  }
  {
    match: "\\\\<hole>"
    name: "hole.symbol"
  }
  {
    match: "\\\\<newline>"
    name: "newline.symbol"
  }
  {
    match: "\\\\<comment>"
    name: "comment.symbol"
  }
  {
    match: "\\\\<open>"
    name: "open.symbol"
  }
  {
    match: "\\\\<close>"
    name: "close.symbol"
  }
  {
    match: "\\\\<^here>"
    name: "here.symbol"
  }
  {
    match: "\\\\<^undefined>"
    name: "undefined.symbol"
  }
  {
    match: "\\\\<^noindent>"
    name: "noindent.symbol"
  }
  {
    match: "\\\\<^smallskip>"
    name: "smallskip.symbol"
  }
  {
    match: "\\\\<^medskip>"
    name: "medskip.symbol"
  }
  {
    match: "\\\\<^bigskip>"
    name: "bigskip.symbol"
  }
  {
    match: "\\\\<^item>"
    name: "item.symbol"
  }
  {
    match: "\\\\<^enum>"
    name: "enum.symbol"
  }
  {
    match: "\\\\<^descr>"
    name: "descr.symbol"
  }
  {
    match: "\\\\<^footnote>"
    name: "footnote.symbol"
  }
  {
    match: "\\\\<^verbatim>"
    name: "verbatim.symbol"
  }
  {
    match: "\\\\<^theory_text>"
    name: "theory_text.symbol"
  }
  {
    match: "\\\\<^emph>"
    name: "emph.symbol"
  }
  {
    match: "\\\\<^bold>"
    name: "bold.symbol"
  }
  {
    match: "\\\\<^sub>"
    name: "sub.symbol"
  }
  {
    match: "\\\\<^sup>"
    name: "sup.symbol"
  }
  {
    match: "\\\\<^bsub>"
    name: "bsub.symbol"
  }
  {
    match: "\\\\<^esub>"
    name: "esub.symbol"
  }
  {
    match: "\\\\<^bsup>"
    name: "bsup.symbol"
  }
  {
    match: "\\\\<^esup>"
    name: "esup.symbol"
  }
  {
    match: "\\\\<^file>"
    name: "file.symbol"
  }
  {
    match: "\\\\<^dir>"
    name: "dir.symbol"
  }
  {
    match: "\\\\<^url>"
    name: "url.symbol"
  }
  {
    match: "\\\\<^doc>"
    name: "doc.symbol"
  }
  {
    match: "\\\\<^action>"
    name: "action.symbol"
  }
]
scopeName: "source.isabelle.theory"
